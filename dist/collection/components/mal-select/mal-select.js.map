{"version":3,"file":"mal-select.js","sourceRoot":"","sources":["../../../src/components/mal-select/mal-select.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, h, Prop, Element, Watch, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'mal-select',\r\n  styleUrl: 'mal-select.css',\r\n  shadow: false, // Set to false to allow PrimeReact styles to work properly\r\n})\r\nexport class MalSelect {\r\n  @Element() el!: HTMLElement;\r\n  \r\n  /**\r\n   * The name of the dropdown\r\n   */\r\n  @Prop() name: string = '';\r\n  \r\n  /**\r\n   * The data for the dropdown options\r\n   */\r\n  @Prop() data: any[] = [];\r\n  \r\n  /**\r\n   * The currently selected value\r\n   */\r\n  @Prop({ mutable: true }) value: any;\r\n  \r\n  /**\r\n   * Event emitted when the selection changes\r\n   */\r\n   @Event() valueChange: EventEmitter<any>;\r\n\r\n  private reactApp: any = null;\r\n\r\n  componentDidLoad() {\r\n    // Wait for React and PrimeReact to be available, then initialize\r\n    const checkReact = () => {\r\n      if ((window as any).React && (window as any).ReactDOM && (window as any).primereact) {\r\n        this.initializeReactDropdown();\r\n      } else {\r\n        setTimeout(checkReact, 100);\r\n      }\r\n    };\r\n    checkReact();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // Clean up React component when element is removed\r\n    if (this.reactApp && (window as any).ReactDOM) {\r\n      (window as any).ReactDOM.unmountComponentAtNode(this.el.querySelector('#react-dropdown'));\r\n    }\r\n  }\r\n\r\n  @Watch('data')\r\n  @Watch('value')\r\n  onPropsChange() {\r\n    // Re-render when props change\r\n    this.initializeReactDropdown();\r\n  }\r\n\r\n  private initializeReactDropdown() {\r\n    const React = (window as any).React;\r\n    const ReactDOM = (window as any).ReactDOM;\r\n    \r\n    // Check if primereact is available\r\n    if (!React || !ReactDOM) {\r\n      console.error('React or ReactDOM not found');\r\n      return;\r\n    }\r\n\r\n    // Ensure primereact global object exists\r\n    const primereact = (window as any).primereact || {};\r\n    \r\n    // Create a complete mock of the style system if needed\r\n    const createEmptyStyleHook = () => ({\r\n      bind: () => {},\r\n      unbind: () => {},\r\n      value: {}\r\n    });\r\n    \r\n    // Create or extend core if needed\r\n    if (!primereact.core) {\r\n      primereact.core = {};\r\n    }\r\n    \r\n    // Setup complete style system mocks\r\n    primereact.core.useStyle = primereact.core.useStyle || createEmptyStyleHook;\r\n    primereact.core.useMountEffect = primereact.core.useMountEffect || function(fn) { setTimeout(fn, 0); };\r\n    primereact.core.ObjectUtils = primereact.core.ObjectUtils || { \r\n      equals: (a, b) => JSON.stringify(a) === JSON.stringify(b),\r\n      isEmpty: (value) => value === null || value === undefined || value === '' \r\n    };\r\n    \r\n    // Get PrimeReact Dropdown from either individual component or full bundle\r\n    const PrimeDropdown = primereact.dropdown?.Dropdown || primereact.Dropdown;\r\n    \r\n    if (!PrimeDropdown) {\r\n      console.error('PrimeReact Dropdown not found');\r\n      return;\r\n    }\r\n\r\n    // Use simple props to avoid style system dependencies\r\n    const dropdown = React.createElement(PrimeDropdown, {\r\n      name: this.name,\r\n      options: this.data,\r\n      value: this.value,\r\n      onChange: (e) => {\r\n        this.value = e.value;\r\n        this.valueChange.emit(e.value);\r\n      },\r\n      optionLabel: 'label',\r\n      className: 'w-full',\r\n    });\r\n\r\n    // Find container element\r\n    const container = this.el.querySelector('#react-dropdown');\r\n    if (container) {\r\n      // Use try/catch to handle potential render errors\r\n      try {\r\n        ReactDOM.render(dropdown, container);\r\n      } catch (err) {\r\n        console.error('Error rendering PrimeReact dropdown:', err);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div id=\"react-dropdown\"></div>\r\n      </Host>\r\n    );\r\n  }\r\n}"]}