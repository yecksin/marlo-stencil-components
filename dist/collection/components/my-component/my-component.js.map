{"version":3,"file":"my-component.js","sourceRoot":"","sources":["../../../src/components/my-component/my-component.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AAO7D,MAAM,OAAO,WAAW;IACX,EAAE,CAAe;IACnB,KAAK,GAAW,CAAC,CAAC;IAE3B,gBAAgB;QACd,sDAAsD;QACtD,MAAM,QAAQ,GAAG,GAAG,EAAE;YACpB,IAAK,MAAc,CAAC,GAAG,EAAE,CAAC;gBACxB,IAAI,CAAC,aAAa,EAAE,CAAC;YACvB,CAAC;iBAAM,CAAC;gBACN,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;YAC5B,CAAC;QACH,CAAC,CAAC;QACF,QAAQ,EAAE,CAAC;IACb,CAAC;IAEO,aAAa;QACnB,MAAM,GAAG,GAAI,MAAc,CAAC,GAAG,CAAC;QAChC,MAAM,GAAG,GAAG,GAAG,CAAC,SAAS,CAAC;YACxB,IAAI;gBACF,OAAO;oBACL,KAAK,EAAE,CAAC;iBACT,CAAC;YACJ,CAAC;YACD,OAAO,EAAE;gBACP,SAAS;oBACP,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC;gBACD,SAAS;oBACP,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC;aACF;YACD,QAAQ,EAAE;;;;;;;;;OAST;SACF,CAAC,CAAC;QAEH,iCAAiC;QACjC,MAAM,SAAS,GAAG,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;QACnE,IAAI,SAAS,EAAE,CAAC;YACd,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACvB,CAAC;IACH,CAAC;IAED,MAAM;QACJ,OAAO,CACL;YACE,4DAAK,EAAE,EAAC,aAAa,GAAO;YAC5B,gEAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SA8BP,CAAS,CACN,CACP,CAAC;IACJ,CAAC;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, State, Element } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'my-component',\r\n  styleUrl: 'my-component.css',\r\n  shadow: true\r\n})\r\nexport class MyComponent {\r\n  @Element() el!: HTMLElement;\r\n  @State() count: number = 0;\r\n\r\n  componentDidLoad() {\r\n    // Wait for Vue to be available and initialize the app\r\n    const checkVue = () => {\r\n      if ((window as any).Vue) {\r\n        this.initializeVue();\r\n      } else {\r\n        setTimeout(checkVue, 100);\r\n      }\r\n    };\r\n    checkVue();\r\n  }\r\n\r\n  private initializeVue() {\r\n    const Vue = (window as any).Vue;\r\n    const app = Vue.createApp({\r\n      data() {\r\n        return {\r\n          count: 0\r\n        };\r\n      },\r\n      methods: {\r\n        increment() {\r\n          this.count++;\r\n        },\r\n        decrement() {\r\n          this.count--;\r\n        }\r\n      },\r\n      template: `\r\n        <div class=\"counter-container\">\r\n          <h2>Vue Counter in Stencil</h2>\r\n          <div class=\"counter\">\r\n            <button @click=\"decrement\">-</button>\r\n            <span>{{ count }}</span>\r\n            <button @click=\"increment\">+</button>\r\n          </div>\r\n        </div>\r\n      `\r\n    });\r\n\r\n    // Mount Vue app to the container\r\n    const container = this.el.shadowRoot.querySelector('#vue-counter');\r\n    if (container) {\r\n      app.mount(container);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"vue-counter\"></div>\r\n        <style>{`\r\n          .counter-container {\r\n            padding: 20px;\r\n            text-align: center;\r\n            font-family: Arial, sans-serif;\r\n          }\r\n          .counter {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            gap: 10px;\r\n            margin-top: 20px;\r\n          }\r\n          button {\r\n            padding: 8px 16px;\r\n            font-size: 18px;\r\n            cursor: pointer;\r\n            background-color: #4CAF50;\r\n            color: white;\r\n            border: none;\r\n            border-radius: 4px;\r\n          }\r\n          button:hover {\r\n            background-color: #45a049;\r\n          }\r\n          span {\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            min-width: 40px;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}