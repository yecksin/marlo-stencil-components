{"file":"mal-select.js","mappings":"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","names":["MalSelect","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/mal-select/mal-select.css?tag=mal-select","src/components/mal-select/mal-select.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n","import { Component, Host, h, Prop, Element, Watch, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'mal-select',\r\n  styleUrl: 'mal-select.css',\r\n  shadow: false, // Set to false to allow PrimeReact styles to work properly\r\n})\r\nexport class MalSelect {\r\n  @Element() el!: HTMLElement;\r\n  \r\n  /**\r\n   * The name of the dropdown\r\n   */\r\n  @Prop() name: string = '';\r\n  \r\n  /**\r\n   * The data for the dropdown options\r\n   */\r\n  @Prop() data: any[] = [];\r\n  \r\n  /**\r\n   * The currently selected value\r\n   */\r\n  @Prop({ mutable: true }) value: any;\r\n  \r\n  /**\r\n   * Event emitted when the selection changes\r\n   */\r\n   @Event() valueChange: EventEmitter<any>;\r\n\r\n  private reactApp: any = null;\r\n\r\n  componentDidLoad() {\r\n    // Wait for React and PrimeReact to be available, then initialize\r\n    const checkReact = () => {\r\n      if ((window as any).React && (window as any).ReactDOM && (window as any).primereact) {\r\n        this.initializeReactDropdown();\r\n      } else {\r\n        setTimeout(checkReact, 100);\r\n      }\r\n    };\r\n    checkReact();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // Clean up React component when element is removed\r\n    if (this.reactApp && (window as any).ReactDOM) {\r\n      (window as any).ReactDOM.unmountComponentAtNode(this.el.querySelector('#react-dropdown'));\r\n    }\r\n  }\r\n\r\n  @Watch('data')\r\n  @Watch('value')\r\n  onPropsChange() {\r\n    // Re-render when props change\r\n    this.initializeReactDropdown();\r\n  }\r\n\r\n  private initializeReactDropdown() {\r\n    const React = (window as any).React;\r\n    const ReactDOM = (window as any).ReactDOM;\r\n    \r\n    // Check if primereact is available\r\n    if (!React || !ReactDOM) {\r\n      console.error('React or ReactDOM not found');\r\n      return;\r\n    }\r\n\r\n    // Ensure primereact global object exists\r\n    const primereact = (window as any).primereact || {};\r\n    \r\n    // Create a complete mock of the style system if needed\r\n    const createEmptyStyleHook = () => ({\r\n      bind: () => {},\r\n      unbind: () => {},\r\n      value: {}\r\n    });\r\n    \r\n    // Create or extend core if needed\r\n    if (!primereact.core) {\r\n      primereact.core = {};\r\n    }\r\n    \r\n    // Setup complete style system mocks\r\n    primereact.core.useStyle = primereact.core.useStyle || createEmptyStyleHook;\r\n    primereact.core.useMountEffect = primereact.core.useMountEffect || function(fn) { setTimeout(fn, 0); };\r\n    primereact.core.ObjectUtils = primereact.core.ObjectUtils || { \r\n      equals: (a, b) => JSON.stringify(a) === JSON.stringify(b),\r\n      isEmpty: (value) => value === null || value === undefined || value === '' \r\n    };\r\n    \r\n    // Get PrimeReact Dropdown from either individual component or full bundle\r\n    const PrimeDropdown = primereact.dropdown?.Dropdown || primereact.Dropdown;\r\n    \r\n    if (!PrimeDropdown) {\r\n      console.error('PrimeReact Dropdown not found');\r\n      return;\r\n    }\r\n\r\n    // Use simple props to avoid style system dependencies\r\n    const dropdown = React.createElement(PrimeDropdown, {\r\n      name: this.name,\r\n      options: this.data,\r\n      value: this.value,\r\n      onChange: (e) => {\r\n        this.value = e.value;\r\n        this.valueChange.emit(e.value);\r\n      },\r\n      optionLabel: 'label',\r\n      className: 'w-full',\r\n    });\r\n\r\n    // Find container element\r\n    const container = this.el.querySelector('#react-dropdown');\r\n    if (container) {\r\n      // Use try/catch to handle potential render errors\r\n      try {\r\n        ReactDOM.render(dropdown, container);\r\n      } catch (err) {\r\n        console.error('Error rendering PrimeReact dropdown:', err);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div id=\"react-dropdown\"></div>\r\n      </Host>\r\n    );\r\n  }\r\n}"],"version":3}