{"version":3,"names":["malMultiselectCss","MalMultiselect","render","h","key","malSelectCss","MalSelect","name","data","value","valueChange","reactApp","componentDidLoad","checkReact","window","React","ReactDOM","primereact","this","initializeReactDropdown","setTimeout","disconnectedCallback","unmountComponentAtNode","el","querySelector","onPropsChange","console","error","createEmptyStyleHook","bind","unbind","core","useStyle","useMountEffect","fn","ObjectUtils","equals","a","b","JSON","stringify","isEmpty","undefined","PrimeDropdown","dropdown","Dropdown","createElement","options","onChange","e","emit","optionLabel","className","container","err","Host","id","myComponentCss","MyComponent","count","checkVue","Vue","initializeVue","app","createApp","methods","increment","decrement","template","shadowRoot","mount"],"sources":["src/components/mal-multiselect/mal-multiselect.css?tag=mal-multiselect&encapsulation=shadow","src/components/mal-multiselect/mal-multiselect.tsx","src/components/mal-select/mal-select.css?tag=mal-select","src/components/mal-select/mal-select.tsx","src/components/my-component/my-component.css?tag=my-component&encapsulation=shadow","src/components/my-component/my-component.tsx"],"sourcesContent":[":host {\r\n  display: block;\r\n}\r\n","import { Component, h } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'mal-multiselect',\r\n  styleUrl: 'mal-multiselect.css',\r\n  shadow: true\r\n})\r\nexport class MalMultiselect {\r\n  render() {\r\n    return <h1>Hello World</h1>;\r\n  }\r\n}\r\n",":host {\r\n  display: block;\r\n}\r\n","import { Component, Host, h, Prop, Element, Watch, Event, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'mal-select',\r\n  styleUrl: 'mal-select.css',\r\n  shadow: false, // Set to false to allow PrimeReact styles to work properly\r\n})\r\nexport class MalSelect {\r\n  @Element() el!: HTMLElement;\r\n  \r\n  /**\r\n   * The name of the dropdown\r\n   */\r\n  @Prop() name: string = '';\r\n  \r\n  /**\r\n   * The data for the dropdown options\r\n   */\r\n  @Prop() data: any[] = [];\r\n  \r\n  /**\r\n   * The currently selected value\r\n   */\r\n  @Prop({ mutable: true }) value: any;\r\n  \r\n  /**\r\n   * Event emitted when the selection changes\r\n   */\r\n   @Event() valueChange: EventEmitter<any>;\r\n\r\n  private reactApp: any = null;\r\n\r\n  componentDidLoad() {\r\n    // Wait for React and PrimeReact to be available, then initialize\r\n    const checkReact = () => {\r\n      if ((window as any).React && (window as any).ReactDOM && (window as any).primereact) {\r\n        this.initializeReactDropdown();\r\n      } else {\r\n        setTimeout(checkReact, 100);\r\n      }\r\n    };\r\n    checkReact();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // Clean up React component when element is removed\r\n    if (this.reactApp && (window as any).ReactDOM) {\r\n      (window as any).ReactDOM.unmountComponentAtNode(this.el.querySelector('#react-dropdown'));\r\n    }\r\n  }\r\n\r\n  @Watch('data')\r\n  @Watch('value')\r\n  onPropsChange() {\r\n    // Re-render when props change\r\n    this.initializeReactDropdown();\r\n  }\r\n\r\n  private initializeReactDropdown() {\r\n    const React = (window as any).React;\r\n    const ReactDOM = (window as any).ReactDOM;\r\n    \r\n    // Check if primereact is available\r\n    if (!React || !ReactDOM) {\r\n      console.error('React or ReactDOM not found');\r\n      return;\r\n    }\r\n\r\n    // Ensure primereact global object exists\r\n    const primereact = (window as any).primereact || {};\r\n    \r\n    // Create a complete mock of the style system if needed\r\n    const createEmptyStyleHook = () => ({\r\n      bind: () => {},\r\n      unbind: () => {},\r\n      value: {}\r\n    });\r\n    \r\n    // Create or extend core if needed\r\n    if (!primereact.core) {\r\n      primereact.core = {};\r\n    }\r\n    \r\n    // Setup complete style system mocks\r\n    primereact.core.useStyle = primereact.core.useStyle || createEmptyStyleHook;\r\n    primereact.core.useMountEffect = primereact.core.useMountEffect || function(fn) { setTimeout(fn, 0); };\r\n    primereact.core.ObjectUtils = primereact.core.ObjectUtils || { \r\n      equals: (a, b) => JSON.stringify(a) === JSON.stringify(b),\r\n      isEmpty: (value) => value === null || value === undefined || value === '' \r\n    };\r\n    \r\n    // Get PrimeReact Dropdown from either individual component or full bundle\r\n    const PrimeDropdown = primereact.dropdown?.Dropdown || primereact.Dropdown;\r\n    \r\n    if (!PrimeDropdown) {\r\n      console.error('PrimeReact Dropdown not found');\r\n      return;\r\n    }\r\n\r\n    // Use simple props to avoid style system dependencies\r\n    const dropdown = React.createElement(PrimeDropdown, {\r\n      name: this.name,\r\n      options: this.data,\r\n      value: this.value,\r\n      onChange: (e) => {\r\n        this.value = e.value;\r\n        this.valueChange.emit(e.value);\r\n      },\r\n      optionLabel: 'label',\r\n      className: 'w-full',\r\n    });\r\n\r\n    // Find container element\r\n    const container = this.el.querySelector('#react-dropdown');\r\n    if (container) {\r\n      // Use try/catch to handle potential render errors\r\n      try {\r\n        ReactDOM.render(dropdown, container);\r\n      } catch (err) {\r\n        console.error('Error rendering PrimeReact dropdown:', err);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div id=\"react-dropdown\"></div>\r\n      </Host>\r\n    );\r\n  }\r\n}",":host {\r\n  display: block;\r\n}\r\n","import { Component, h, State, Element } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'my-component',\r\n  styleUrl: 'my-component.css',\r\n  shadow: true\r\n})\r\nexport class MyComponent {\r\n  @Element() el!: HTMLElement;\r\n  @State() count: number = 0;\r\n\r\n  componentDidLoad() {\r\n    // Wait for Vue to be available and initialize the app\r\n    const checkVue = () => {\r\n      if ((window as any).Vue) {\r\n        this.initializeVue();\r\n      } else {\r\n        setTimeout(checkVue, 100);\r\n      }\r\n    };\r\n    checkVue();\r\n  }\r\n\r\n  private initializeVue() {\r\n    const Vue = (window as any).Vue;\r\n    const app = Vue.createApp({\r\n      data() {\r\n        return {\r\n          count: 0\r\n        };\r\n      },\r\n      methods: {\r\n        increment() {\r\n          this.count++;\r\n        },\r\n        decrement() {\r\n          this.count--;\r\n        }\r\n      },\r\n      template: `\r\n        <div class=\"counter-container\">\r\n          <h2>Vue Counter in Stencil</h2>\r\n          <div class=\"counter\">\r\n            <button @click=\"decrement\">-</button>\r\n            <span>{{ count }}</span>\r\n            <button @click=\"increment\">+</button>\r\n          </div>\r\n        </div>\r\n      `\r\n    });\r\n\r\n    // Mount Vue app to the container\r\n    const container = this.el.shadowRoot.querySelector('#vue-counter');\r\n    if (container) {\r\n      app.mount(container);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div id=\"vue-counter\"></div>\r\n        <style>{`\r\n          .counter-container {\r\n            padding: 20px;\r\n            text-align: center;\r\n            font-family: Arial, sans-serif;\r\n          }\r\n          .counter {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            gap: 10px;\r\n            margin-top: 20px;\r\n          }\r\n          button {\r\n            padding: 8px 16px;\r\n            font-size: 18px;\r\n            cursor: pointer;\r\n            background-color: #4CAF50;\r\n            color: white;\r\n            border: none;\r\n            border-radius: 4px;\r\n          }\r\n          button:hover {\r\n            background-color: #45a049;\r\n          }\r\n          span {\r\n            font-size: 24px;\r\n            font-weight: bold;\r\n            min-width: 40px;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"gEAAA,MAAMA,EAAoB,uB,MCObC,EAAc,M,yBACzB,MAAAC,GACE,OAAOC,EAAA,MAAAC,IAAA,0D,aCTX,MAAMC,EAAe,uB,MCORC,EAAS,M,wFAMZC,KAAe,GAKfC,KAAc,GAKGC,MAKfC,YAEFC,SAAgB,KAExB,gBAAAC,GAEE,MAAMC,EAAa,KACjB,GAAKC,OAAeC,OAAUD,OAAeE,UAAaF,OAAeG,WAAY,CACnFC,KAAKC,yB,KACA,CACLC,WAAWP,EAAY,I,GAG3BA,G,CAGF,oBAAAQ,GAEE,GAAIH,KAAKP,UAAaG,OAAeE,SAAU,CAC5CF,OAAeE,SAASM,uBAAuBJ,KAAKK,GAAGC,cAAc,mB,EAM1E,aAAAC,GAEEP,KAAKC,yB,CAGC,uBAAAA,GACN,MAAMJ,EAASD,OAAeC,MAC9B,MAAMC,EAAYF,OAAeE,SAGjC,IAAKD,IAAUC,EAAU,CACvBU,QAAQC,MAAM,+BACd,M,CAIF,MAAMV,EAAcH,OAAeG,YAAc,GAGjD,MAAMW,EAAuB,MAC3BC,KAAM,OACNC,OAAQ,OACRrB,MAAO,KAIT,IAAKQ,EAAWc,KAAM,CACpBd,EAAWc,KAAO,E,CAIpBd,EAAWc,KAAKC,SAAWf,EAAWc,KAAKC,UAAYJ,EACvDX,EAAWc,KAAKE,eAAiBhB,EAAWc,KAAKE,gBAAkB,SAASC,GAAMd,WAAWc,EAAI,EAAG,EACpGjB,EAAWc,KAAKI,YAAclB,EAAWc,KAAKI,aAAe,CAC3DC,OAAQ,CAACC,EAAGC,IAAMC,KAAKC,UAAUH,KAAOE,KAAKC,UAAUF,GACvDG,QAAUhC,GAAUA,IAAU,MAAQA,IAAUiC,WAAajC,IAAU,IAIzE,MAAMkC,EAAgB1B,EAAW2B,UAAUC,UAAY5B,EAAW4B,SAElE,IAAKF,EAAe,CAClBjB,QAAQC,MAAM,iCACd,M,CAIF,MAAMiB,EAAW7B,EAAM+B,cAAcH,EAAe,CAClDpC,KAAMW,KAAKX,KACXwC,QAAS7B,KAAKV,KACdC,MAAOS,KAAKT,MACZuC,SAAWC,IACT/B,KAAKT,MAAQwC,EAAExC,MACfS,KAAKR,YAAYwC,KAAKD,EAAExC,MAAM,EAEhC0C,YAAa,QACbC,UAAW,WAIb,MAAMC,EAAYnC,KAAKK,GAAGC,cAAc,mBACxC,GAAI6B,EAAW,CAEb,IACErC,EAASd,OAAO0C,EAAUS,E,CAC1B,MAAOC,GACP5B,QAAQC,MAAM,uCAAwC2B,E,GAK5D,MAAApD,GACE,OACEC,EAACoD,EAAI,CAAAnD,IAAA,4CACHD,EAAA,OAAAC,IAAA,2CAAKoD,GAAG,mB,0FC/HhB,MAAMC,EAAiB,uB,MCOVC,EAAW,M,iDAEbC,MAAgB,EAEzB,gBAAA/C,GAEE,MAAMgD,EAAW,KACf,GAAK9C,OAAe+C,IAAK,CACvB3C,KAAK4C,e,KACA,CACL1C,WAAWwC,EAAU,I,GAGzBA,G,CAGM,aAAAE,GACN,MAAMD,EAAO/C,OAAe+C,IAC5B,MAAME,EAAMF,EAAIG,UAAU,CACxB,IAAAxD,GACE,MAAO,CACLmD,MAAO,E,EAGXM,QAAS,CACP,SAAAC,GACEhD,KAAKyC,O,EAEP,SAAAQ,GACEjD,KAAKyC,O,GAGTS,SAAU,gTAaZ,MAAMf,EAAYnC,KAAKK,GAAG8C,WAAW7C,cAAc,gBACnD,GAAI6B,EAAW,CACbU,EAAIO,MAAMjB,E,EAId,MAAAnD,GACE,OACEC,EAAA,OAAAC,IAAA,4CACED,EAAK,OAAAC,IAAA,2CAAAoD,GAAG,gBACRrD,EAAQ,SAAAC,IAAA,q1B","ignoreList":[]}